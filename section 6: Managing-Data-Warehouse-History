
Slowly Changing Dimensions(SCDs) and Data Warehouse History:
	crucial for managing historical data. SCDs allow us to handle changes in dimension data over time, which is essential for maintaining the time-variant nature of a data warehouse.
	Type 1 SCD: 
		This method overwrites old data with new data. It is the simplest approach and does not retain any history. 
		This method is typically used when fixing errors or when historical data is not necessary.
	Type 2 SCD: 
		This method maintains unlimited history by creating a new row in the dimension table for each change. 
		Each row contains a version of the data with effective start and end dates, allowing us to keep track of historical changes.
	Type 3 SCD: 
		This method keeps a limited history by storing previous values in additional columns within the same row. 
		It allows for easy comparison between the current and previous values but is limited in the amount of history it can store.
	Type 0 SCD: The original value is never updated, retaining the initial value permanently.
	Type 4 SCD: Uses a "mini-dimension" for frequently changing attributes to avoid excessive versioning in the main dimension table.
	Type 5, 6, and 7 SCDs: These are hybrid approaches combining elements of the previous types to suit specific needs.

Design a type 1 SCD:-
	Advantages:
		Simplicity: Type 1 is the simplest and most straightforward SCD type.
		Error Correction: Content errors, such as an erroneous birth date, are purged forever. 
						It is commonly used for error correction and situations where we decide not to retain historical information for certain columns of data.
	Disadvantages:
		Loss of History, Inconsistent Reporting, Overuse
		
	Type 1 SCDs are useful for simple error corrections where retaining historical data is unnecessary. 
	However, be mindful of the potential for inconsistent reporting and the tendency to overuse this method in quick, simple data warehouse solutions
		
Design a type 2 SCD:-
	Type 2, the existing row of data that's going to be changed actually remains exactly as is. You don't do anything to it at all. 
	Instead, you add a brand new row to the dimension table, and that new row will reflect the current state of all the attributes, including the data that's going to change.
	Advantages of Type 2:
		Historical Accuracy: Maintains historical data accurately, which is crucial for reporting and analytics.
		Complete History: Allows for accurate reporting over time, reflecting the true state of data at any given point in the past.
	Disadvantages of Type 2:
		Increased Storage: Requires more storage as new rows are added for changes.
		Complexity in Reporting: Reporting and analytics can become more complex due to the need to handle multiple versions of the same entity.
		Fact Table Complications: Changes in dimension data impact fact tables, potentially leading to more complex queries and data management.
		
	Type 2 SCDs are powerful for maintaining historical accuracy but introduce complexity in data management and reporting. 
	Properly handling these complexities ensures accurate and meaningful analytics over time.

Maintain Correct Data order with Type 2 SCDs:
	Type 2 Slowly Changing Dimensions (SCD) and address a specific challenge: maintaining the correct order of our data.
	Solution 1: Current Flag
	Solution 2: Effective Date and Expiration Date
	By implementing a combination of current flag and effective/expiration dates, 
	you can maintain a clear and accurate history of changes while easily identifying the current state of your data.
	managing Type 2 SCD requires careful handling of data versioning and sequencing. 
	The combined use of current flags and effective/expiration dates provides a comprehensive solution to these challenges

Design a type 3 SCD:-
	Type 3 SCDs offer a middle ground between Type 1 (no history) and Type 2 (infinite history).
	Type 3 SCDs add new columns, rather than rows, to reflect changes. 
	This setup includes an "old value" column and a "new value" column, allowing easy back-and-forth switching for flexible reporting and analytics. 
	This approach is particularly useful for scenarios where all data in a dimension is reorganized.
	Use Cases and Limitations:
		Reorganization:
			All rows change at the same time.
			Easily switch between old and new structures for reporting.
		Random Changes:
			Not suited for frequent, individual changes (e.g., a student's address).
			Creates unwieldy sets of columns with lots of empty data.
	Limitations:
		Not ideal for frequent or random changes.
		Adding more than two columns can be unwieldy.
		Best for scenarios where all data changes simultaneously.
	Summary:
		Type 3 SCDs provide a flexible and straightforward solution for specific reorganization scenarios. 
		They simplify reporting and analysis by adding columns for old and new values, allowing easy comparison and trending. 
		However, they are not suitable for frequent, individual changes and become cumbersome with multiple columns. 
		For complex histories, reverting to Type 2 SCDs may be more appropriate.

